# Run this once. -G defaults to vs 2019 for me. 
# Uses msvc compiler and msbuild
cmake -A "x64" -DCMAKE_BUILD_TYPE=Debug ../../
# Run this every time after.
cmake.exe --build . --config Debug

# For extreme speed, do a release build. 
# Uses msvc compiler and msbuild
cmake -A "x64" -DCMAKE_BUILD_TYPE=Release ../../
cmake.exe --build . --config Release

# In order to find which configuration options are available,
# I use "cmake -LH ../../"
# Not sure how to enable them in CMakeLists.txt,
# so I just add "-DKEY=VAL" to the command line. It works!
# In order to use the intel compiler, I open up the dev console for the intel compiler
# cd into my project's build directory, and run this command.
# Uses intel compiler and ninja
cmake -DCMAKE_C_COMPILER=icl -DCMAKE_CXX_COMPILER=icl -DCMAKE_BUILD_TYPE=Release -G "Ninja" ../../
cmake.exe --build . 

# Using intel compiler and msbuild (doesn't work for me)
cmake -DCMAKE_C_COMPILER=icl -DCMAKE_CXX_COMPILER=icl -DCMAKE_BUILD_TYPE=Release -G "Visual Studio 16 2019" -A x64 ../../


# Ninja doesn't work for me, the msvc generator overwrites my icl flags and LIBC is best set from the command line.
# As slow as NMake Makefiles is, it doesn't give me this error:
#ninja: error: FindFirstFileExA(../../extern/sdl2/includec:/users/steve/desktop/software_renderer/extern/sdl2/src/video): The filename, directory name, or volume label syntax is incorrect.
# UPDATE: Now with Ninja, I get an error complaining about the pathname being longer than 260 characters. No idea how to fix this, so I'll stick with NMake Makefiles.
# If I was working on Linux, I would be using Ninja 100%. It is by far the fastest CMake generator.


## Final decision on build invocation (I have no idea how to make msbuild use the intel compiler, and ninja doesn't work for me, so I used nmake instead. Works perfectly, albeit slow):
# Debug w/ windows debug symbols:
cmake -A "x64" -DCMAKE_BUILD_TYPE=Debug -DLIBC=YES ../../
cmake.exe --build . --config Debug
# Release w/ intel compiler:
cmake -DCMAKE_C_COMPILER=icl -DCMAKE_CXX_COMPILER=icl -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLIBC=YES -G "NMake Makefiles" ../../
cmake.exe --build .


# Unity build:
cmake -DCMAKE_C_COMPILER=icl -DCMAKE_CXX_COMPILER=icl -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCMAKE_UNITY_BUILD=ON -DCMAKE_UNITY_BUILD_BATCH_SIZE=0 -DLIBC=YES -G "NMake Makefiles" ../../
cmake.exe --build .

# Intel licence expired. Using VS and a working latest Ninja:
cmake -DCMAKE_C_COMPILER=cl -DCMAKE_CXX_COMPILER=cl -DCMAKE_BUILD_TYPE=RelWithDebInfo -DLIBC=YES -G "Ninja" ../../